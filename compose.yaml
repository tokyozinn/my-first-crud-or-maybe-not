services:
  app:
    build: .
    container_name: app
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
    depends_on:
      mongo:
        condition: service_healthy
      wiremock:
        condition: service_started
      localstack:
        condition: service_started
  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpw
      MONGO_INITDB_DATABASE: mydatabase
    volumes:
      - ./data/mongo:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand({ ping: 1 })' | mongosh --quiet -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --authenticationDatabase admin"]
      interval: 5s
      timeout: 5s
      retries: 20

  wiremock:
    image: wiremock/wiremock:3.13.1
    container_name: wiremock
    command: ["--port","8081","--https-port","8444","--verbose"]  # HTTP 8081, HTTPS 8444
    ports:
      - "8081:8081"
      - "8444:8444"     # optional; remove if you donâ€™t need HTTPS
    volumes:
      - ./wiremock/mappings:/home/wiremock/mappings:ro
      - ./wiremock/__files:/home/wiremock/__files:ro


  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - DEBUG=1
      - SMTP_HOST=mailhog:1025
      - SNS_SES_SENDER_ADDRESS=no-reply@sns.local
    volumes:
      - ./localstack/init/ready.d:/etc/localstack/init/ready.d
      - ./localstack/data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - "8025:8025"

  mongo-express:
    image: mongo-express:1.0.2
    ports:
      - "8083:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpw
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      mongo:
        condition: service_healthy
